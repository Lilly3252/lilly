{"version":3,"file":"say.js","sourceRoot":"./src/","sources":["src/commands/administrator/say.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtE,OAAO,MAAM,MAAM,qCAAqC,CAAC;AACzD,MAAM,CAAC,MAAM,MAAM,GAA2B,IAAI,mBAAmB,EAAE;KAClE,OAAO,CAAC,KAAK,CAAC;KACd,cAAc,CAAC,gBAAgB,CAAC;KAChC,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CACxB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAC7D;KACA,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;KAC3F,2BAA2B,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;AAG1E,MAAM,CAAC,MAAM,GAAG,GAAwB,KAAK,EAAE,WAAkD,EAAiB,EAAE;IAChH,IACI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,EAC1F;QACE,OAAO,KAAK,WAAW,CAAC,KAAK,CACzB,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CACrF,CAAC;KACL;IACD,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAE,CAAC;IAC1D,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAE,CAAC;IACrD,IAAI,CAAC,EAAE,WAAW,EAAE,EAAE;QAClB,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAClB;SAAM;QACH,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAA;KACjG;AACL,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"say\")\r\n    .setDescription(\"say something.\")\r\n    .addStringOption((option) =>\r\n        option.setName(\"message\").setDescription(\"message to say\")\r\n    )\r\n    .addChannelOption((option) => option.setName(\"channel\").setDescription(\"select a channel.\"))\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.ManageMessages)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (\r\n        !interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.ManageMessages)\r\n    ) {\r\n        return void interaction.reply(\r\n            { content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"MANAGE_MESSAGES\"], ephemeral: true }\r\n        );\r\n    }\r\n    const message = interaction.options.getString(\"message\")!;\r\n    const d = interaction.options.getChannel(\"channel\")!;\r\n    if (d?.isTextBased()) {\r\n        d.send(message)\r\n    } else {\r\n        return void interaction.reply(\"i cant send messages in a channel that is not a text channel.\")\r\n    }\r\n};"]}