{"version":3,"file":"purge.js","sourceRoot":"./src/","sources":["src/commands/administrator/purge.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtE,OAAO,MAAM,MAAM,qCAAqC,CAAC;AACzD,MAAM,CAAC,MAAM,MAAM,GAA2B,IAAI,mBAAmB,EAAE;KAClE,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,6BAA6B,CAAC;KAC9D,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACtH,2BAA2B,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;AAG1E,MAAM,CAAC,MAAM,GAAG,GAAwB,KAAK,EAAE,WAAkD,EAAiB,EAAE;IAChH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;QAC1F,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KACrH;IACD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACtD,IAAI,KAAM,GAAG,GAAG;QACZ,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IACjG,IAAI;QACA,MAAM,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,KAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACpD,WAAW,CAAC,KAAK,CAAC,WAAW,KAAK,YAAY,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;KACN;IAAC,MAAM;QACJ,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,EAAE,IAAI,EAAE,CAC7F,CAAC;KACL;AACL,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"purge\").setDescription(\"purge messages in a channel\")\r\n    .addNumberOption((option) => option.setName(\"number\").setDescription(\"number of messages from 1-99\").setRequired(true))\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.ManageMessages)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (!interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.ManageMessages)) {\r\n        return void interaction.reply({ content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"MANAGE_MESSAGES\"], ephemeral: true });\r\n    }\r\n    const count = interaction.options.getNumber(\"number\");\r\n    if (count! > 100)\r\n        return void interaction.reply({ content: SYSTEM.ERROR.ADMIN.VALID_AMOUNT, ephemeral: true });\r\n    try {\r\n        await interaction.channel?.bulkDelete(count!).then(() => {\r\n            interaction.reply(`Deleted ${count} messages.`);\r\n        });\r\n    } catch {\r\n        return void interaction.reply({ content: SYSTEM.ERROR.ADMIN.MESSAGE_DELETED, ephemeral: true }\r\n        );\r\n    }\r\n};"]}