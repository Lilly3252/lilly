{"version":3,"file":"timeout.js","sourceRoot":"./src/","sources":["src/commands/administrator/timeout.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\nimport * as Embed from \"../../structures/messageEmbeds.js\";\r\nimport { prisma } from \"../../index.js\";\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"timeout\")\r\n    .setDescription(\"timeout a member.\")\r\n    .addUserOption((option) =>\r\n        option.setName(\"target\").setDescription(\"Select a user\").setRequired(true)\r\n    )\r\n    .addStringOption((option) =>\r\n        option.setName(\"time\").setDescription(\"time for timeout\")\r\n            .addChoices({ name: \"5min\", value: \"300000\" }, { name: \"10min\", value: \"600000\" }, { name: \"15min\", value: \"900000\" },\r\n                { name: \"30min\", value: \"1800000\" }, { name: \"45min\", value: \"2700000\" }, { name: \"1d\", value: \"86400000\" }, { name: \"2d\", value: \"172800000\" },\r\n                { name: \"3d\", value: \"259200000\" }, { name: \"4d\", value: \"345600000\" }, { name: \"5d\", value: \"432000000\" }, { name: \"6d\", value: \"518400000\" },\r\n                { name: \"1week\", value: \"604800000\" }, { name: \"2weeks\", value: \"1209600000\" }, { name: \"28days\", value: \"2419200000\" }).setRequired(true))\r\n\r\n    .addStringOption((option) =>\r\n        option\r\n            .setName(\"reason\")\r\n            .setDescription(\"reason to timeout\")\r\n            .setRequired(true)\r\n    )\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.ModerateMembers)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (\r\n        !interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.ModerateMembers)\r\n    ) {\r\n        return void interaction.reply({\r\n            content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"MODERATE_MEMBERS\"],\r\n            ephemeral: true,\r\n        });\r\n    }\r\n    const member = interaction.options.getMember(\"target\")!;\r\n    const time = interaction.options.getString(\"time\")!;\r\n    const reason = interaction.options.getString(\"reason\")!;\r\n    const database = await prisma.guild.findFirst({ where: { guildID: interaction.guild.id } });\r\n    if (!member.moderatable || !member.manageable) {\r\n        await interaction.reply({\r\n            content: SYSTEM.ERROR.ADMIN.MODERATION_DENIED,\r\n            ephemeral: true,\r\n        });\r\n    }\r\n    member\r\n        .timeout(+time, reason)\r\n        .then(() => {\r\n            member\r\n                .send(\r\n                    `Hello, you have been timeout in ${interaction.guild.name} for: ${reason}`\r\n                )\r\n                .catch((err) => console.log(err)),\r\n                interaction.reply({\r\n                    content: `${member.user.username} was successfully timeout.`,\r\n                    ephemeral: true,\r\n                });\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n    const g = database?.logChannelID;\r\n    if (!g || g === null) { return }\r\n    const LogChannel = interaction.client.channels.cache.get(g);\r\n    if (!LogChannel || LogChannel === null) { return }\r\n    if (LogChannel?.isTextBased()) {\r\n        LogChannel?.send({ embeds: [Embed.AdminEmbed(interaction, member!, reason!)] });\r\n    }\r\n\r\n};"]}