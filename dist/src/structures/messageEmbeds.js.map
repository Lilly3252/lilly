{"version":3,"file":"messageEmbeds.js","sourceRoot":"./src/","sources":["src/structures/messageEmbeds.ts"],"names":[],"mappings":"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","sourcesContent":["import * as discordJs from \"discord.js\";\r\nimport * as Package from \"./../../package.json\";\r\nimport ms from \"ms\";\r\nimport os from \"os\";\r\nimport { ChannelType, GuildExplicitContentFilter, GuildVerificationLevel } from \"discord.js\";\r\n\r\n\r\nexport function MuteEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    member: discordJs.GuildMember,\r\n    reason: string,\r\n    time: string\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setColor(discordJs.Colors[\"Yellow\"])\r\n        .addFields([{\r\n            name: \"Moderation\", value: [\r\n                `**❯ Action:** Timeout`,\r\n                `**❯ Member:** ${member.user}`,\r\n                `**❯ Moderator:** ${interaction.member.user.tag} `,\r\n                `**❯ Reason:** ${reason}`,\r\n                `**❯ Time:** ${time}`,\r\n            ].join(\"\\n\")\r\n        }]\r\n        )\r\n        .setFooter({ text: `Date: ${interaction.createdAt.toLocaleString()}` });\r\n}\r\n\r\nexport function AdminEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    member: discordJs.GuildMember,\r\n    reason: string\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setColor(discordJs.Colors[\"DarkRed\"])\r\n        .addFields([{\r\n            name: \"Moderation\", value:\r\n                [\r\n                    `**❯ Action:** ${interaction.commandName}`,\r\n                    `**❯ Member:** ${member.user}`,\r\n                    `**❯ Moderator:** ${interaction.member.user.tag} `,\r\n                    `**❯ Reason:** ${reason}`,\r\n                ].join(\"\\n\")\r\n        }]\r\n\r\n\r\n        )\r\n        .setFooter({ text: `Date: ${interaction.createdAt.toLocaleString()}` });\r\n}\r\n\r\nexport function UserInfoEmbed(\r\n    interaction: discordJs.CommandInteraction<\"cached\">,\r\n    member: discordJs.GuildMember,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    role: any,\r\n    flag: string[],\r\n    flags: { [x: string]: string },\r\n    created: string\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setThumbnail(member.user.displayAvatarURL({ forceStatic: true, size: 512 }))\r\n        .setColor(member.displayHexColor || discordJs.Colors[\"Blue\"])\r\n        .addFields([{\r\n            name: \"User\", value:\r\n                [\r\n                    `**❯ Username:** ${member.user.username}`,\r\n                    `**❯ Discriminator:** ${member.user.discriminator}`,\r\n                    `**❯ ID:** ${member.id}`,\r\n                    `**❯ Flags:** ${flag.length\r\n                        ? flag.map((a: string | number) => flags[a]).join(\", \")\r\n                        : \"None\"\r\n                    }`,\r\n                    `**❯ Avatar:** [Link to avatar](${member.user.displayAvatarURL({\r\n                        forceStatic: true,\r\n                    })})`,\r\n                    `**❯ Time Created:** ${created}`,\r\n                    `**❯ Status:** ${member.presence?.status}`,\r\n                    `**❯ Game / Custom status:** ${member.presence?.activities[0]?.state || \"Not playing a game.\"\r\n                    }`,\r\n                    `\\u200b`,\r\n                ].join(\"\\n\")\r\n        },\r\n        {\r\n            name: \"Member\", value:\r\n                [\r\n                    `**❯ Highest Role:** ${member.roles.highest.id === interaction.guild.id\r\n                        ? \"None\"\r\n                        : member.roles.highest.name\r\n                    }`,\r\n                    `**❯ Server Join Date:** ${member.joinedTimestamp}`,\r\n                    `**❯ Hoist Role:** ${member.roles.hoist ? member.roles.hoist.name : \"None\"\r\n                    }`,\r\n                    `**❯ Roles [${role.length}]:** ${role.length < 10\r\n                        ? role.join(\", \")\r\n                        : role.length > 10\r\n                            ? interaction.client.utils.trimArray(role)\r\n                            : \"None\"\r\n                    }`,\r\n                    `\\u200b`,\r\n                ].join(\"\\n\")\r\n        }])\r\n}\r\n\r\nexport function SettingEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    guild_db: {\r\n        welcomeChannelID: string | null;\r\n        logChannelID: string | null;\r\n        moderatorRole: string | null;\r\n        personalizedWelcomeMessage: string | null;\r\n        antiRaidMode: boolean;\r\n        messageDeleteMode: boolean;\r\n        messageBulkDeleteMode: boolean;\r\n        messageUpdateMode: boolean;\r\n    }\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setAuthor({ name: `${interaction.guild.name} Settings` })\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        .setThumbnail(interaction.guild.iconURL({ forceStatic: true })!)\r\n        .setDescription(\r\n            [\r\n                `**❯ Prefix:** Slash commands !`,\r\n                `**❯ WelcomeChannelID:**${guild_db.welcomeChannelID\r\n                    ? guild_db.welcomeChannelID\r\n                    : \"No information yet\"\r\n                }`,\r\n                `**❯ ModLogChannelID:** ${guild_db.logChannelID ? guild_db.logChannelID : \"No information yet\"\r\n                }`,\r\n                `**❯ ModRoleID:** ${guild_db.moderatorRole\r\n                    ? guild_db.moderatorRole\r\n                    : \"No information yet\"\r\n                } `,\r\n                `**❯ WelcomeMessage:** ${guild_db.personalizedWelcomeMessage\r\n                    ? guild_db.personalizedWelcomeMessage\r\n                    : \"No information yet\"\r\n                }`,\r\n                `**❯ Anti-raid:** ${!!guild_db.antiRaidMode && guild_db.antiRaidMode}`,\r\n                `**❯ MessageDelete** ${!!guild_db.messageDeleteMode && guild_db.messageDeleteMode\r\n                }`,\r\n                `**❯ messageBulkDelete** ${!!guild_db.messageBulkDeleteMode && guild_db.messageBulkDeleteMode\r\n                }`,\r\n                `**❯ MessageUpdate:** ${!!guild_db.messageUpdateMode && guild_db.messageUpdateMode\r\n                }`,\r\n            ].join(\"\\n\")\r\n        )\r\n        .setFooter({\r\n            text: `Requested by ${interaction.user.username}`,\r\n            iconURL: `${interaction.user.displayAvatarURL({ forceStatic: true })}`,\r\n        });\r\n}\r\nexport function ServerInfoEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    owner: discordJs.GuildMember,\r\n    member: discordJs.DataManager<string, discordJs.GuildMember, discordJs.GuildMemberResolvable>,\r\n    b: string[],\r\n    d: discordJs.DataManager<string, discordJs.Channel, discordJs.GuildChannelResolvable>,\r\n    e: discordJs.DataManager<string, discordJs.Emoji, discordJs.EmojiResolvable>,\r\n    server_create: string\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setDescription(`**Guild information for __${interaction.guild.name}__**`)\r\n        .setColor(discordJs.Colors[\"Blue\"])\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        .setThumbnail(interaction.guild.iconURL({ forceStatic: true })!)\r\n        .addFields([{\r\n            name: \"General\", value: [\r\n                `**❯ Name:** ${interaction.guild.name}`,\r\n                `**❯ ID:** ${interaction.guild.id}`,\r\n                `**❯ Owner:** ${owner.user.tag} (${owner.id})`,\r\n                `**❯ Boost Tier:** ${interaction.guild.premiumTier\r\n                    ? `Tier ${interaction.guild.premiumTier}`\r\n                    : \"None\"\r\n                }`,\r\n                `**❯ Explicit Filter:** ${GuildExplicitContentFilter[interaction.guild.explicitContentFilter]\r\n                }`,\r\n                `**❯ Verification Level:** ${GuildVerificationLevel[interaction.guild.verificationLevel]\r\n                }`,\r\n                `**❯ Time Created:** ${server_create}`,\r\n                \"\\u200B\",\r\n            ].join(\"\\n\")\r\n        },\r\n        {\r\n            name: \"statistic\", value: [\r\n                `**❯ Role Count:** ${b.length}`,\r\n                `**❯ Emoji Count:** ${e.cache.size}`,\r\n                `**❯ Regular Emoji Count:** ${e.cache.filter((a: discordJs.Emoji) => !a.animated).size\r\n                }`,\r\n                `**❯ Animated Emoji Count:** ${e.cache.filter((a: discordJs.Emoji) => a.animated as true).size\r\n                }`,\r\n                `**❯ Member Count:** ${interaction.guild.memberCount}`,\r\n                `**❯ Humans:** ${member.cache.filter((a: discordJs.GuildMember) => !a.user.bot).size\r\n                }`,\r\n                `**❯ Bots:** ${member.cache.filter((a: discordJs.GuildMember) => a.user.bot).size\r\n                }`,\r\n                `**❯ Text Channels:** ${d.cache.filter((channel: discordJs.Channel) => channel.type === ChannelType.GuildText)\r\n                    .size\r\n                }`,\r\n                `**❯ Voice Channels:** ${d.cache.filter((channel: discordJs.Channel) => channel.type === ChannelType.GuildVoice)\r\n                    .size\r\n                }`,\r\n                `**❯ Stage Channels:** ${d.cache.filter(\r\n                    (channel: discordJs.Channel) => channel.type === ChannelType.GuildStageVoice\r\n                ).size\r\n                }`,\r\n                `**❯ Boost Count:** ${interaction.guild.premiumSubscriptionCount || \"0\"\r\n                }`,\r\n                \"\\u200B\",\r\n            ].join(\"\\n\")\r\n        },\r\n        {\r\n            name: \"Presence\", value: [\r\n                `**❯ Online:** ${member.cache.filter(\r\n                    (guildmember: discordJs.GuildMember) =>\r\n                        guildmember.presence?.status === \"online\"\r\n                ).size\r\n                }`,\r\n                `**❯ Idle:** ${member.cache.filter(\r\n                    (guildmember: discordJs.GuildMember) =>\r\n                        guildmember.presence?.status === \"idle\"\r\n                ).size\r\n                }`,\r\n                `**❯ Do Not Disturb:** ${member.cache.filter(\r\n                    (guildmember: discordJs.GuildMember) => guildmember.presence?.status === \"dnd\"\r\n                ).size\r\n                }`,\r\n                `**❯ Offline:** ${member.cache.filter(\r\n                    (guildmember: discordJs.GuildMember) =>\r\n                        guildmember.presence?.status === \"offline\"\r\n                ).size\r\n                }`,\r\n                `**❯ No presence detected:** ${member.cache.filter(\r\n                    (guildmember: discordJs.GuildMember) => guildmember.presence === null\r\n                ).size\r\n                }`,\r\n                \"\\u200B\",\r\n            ].join(\"\\n\")\r\n        }, {\r\n            name: `Roles [${b.length - 1}]`, value: [\r\n                b.length < 10\r\n                    ? b.join(\", \")\r\n                    : b.length > 10\r\n                        ? interaction.client.utils.trimArray(b)\r\n                        : \"None\",\r\n            ].join(\"\\n\")\r\n        }\r\n        ])\r\n        .setTimestamp();\r\n}\r\nexport function BotInfoEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    b: os.CpuInfo,\r\n    bot_create: string\r\n) {\r\n    if (!interaction.client.user) return;\r\n    if (!interaction.guild.members.me) return;\r\n    return new discordJs.EmbedBuilder()\r\n        .setThumbnail(interaction.client.user.displayAvatarURL())\r\n        .setColor(interaction.guild.members.me.displayHexColor || discordJs.Colors[\"Blue\"])\r\n        .addFields([{\r\n            name: \"General\", value: [\r\n                `**❯ Client:** ${interaction.client.user.tag} (${interaction.client.user.id})`,\r\n                `**❯ Commands:** ${interaction.client.commands.size}`,\r\n                `**❯ Servers:** ${interaction.client.guilds.cache.size.toLocaleString()} `,\r\n                `**❯ Users:** ${interaction.client.guilds.cache\r\n                    .reduce((c, a) => c + a.memberCount, 0)\r\n                    .toLocaleString()}`,\r\n                `**❯ Channels:** ${interaction.client.channels.cache.size.toLocaleString()}`,\r\n                `**❯ Creation Date:** ${bot_create}`,\r\n                `**❯ Node.js:** ${process.version}`,\r\n                `**❯ Version:** v${Package.default.version}`,\r\n                `**❯ Discord.js:** v${Package.default.dependencies[\"discord.js\"]}`,\r\n                \"\\u200B\",\r\n            ].join(\"\\n\")\r\n        },\r\n        {\r\n            name: \"System\", value: [\r\n                `**❯ Platform:** ${process.platform}`,\r\n                `**❯ Uptime:** ${ms(1e3 * process.uptime(), { long: true })}`,\r\n                `**❯ CPU:**`,\r\n                `\\u3000 Cores: ${os.cpus().length}`,\r\n                `\\u3000 Model: ${b.model}`,\r\n                `\\u3000 Speed: ${b.speed}MHz`,\r\n                `**❯ Memory:**`,\r\n                `\\u3000 Total: ${interaction.client.utils.formatBytes(\r\n                    process.memoryUsage().heapTotal\r\n                )}`,\r\n                `\\u3000 Used: ${interaction.client.utils.formatBytes(\r\n                    process.memoryUsage().heapUsed\r\n                )}`,\r\n            ].join(\"\\n\")\r\n        },\r\n        {\r\n            name: \"Code\", value: `[Click here](https://github.com/Lilly3252/LillyBot)`,\r\n            inline: true\r\n        }\r\n\r\n        ])\r\n        .setTimestamp();\r\n}\r\nexport function RestrictEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    reason: string,\r\n    restriction_name: string,\r\n    e: discordJs.GuildMember\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setAuthor({\r\n            name: `${interaction.user.tag} (${interaction.user.id})`,\r\n            iconURL: interaction.user.displayAvatarURL(),\r\n        })\r\n        .setColor(discordJs.Colors[\"DarkOrange\"])\r\n        .addFields([{\r\n            name: \"Moderation\", value: [\r\n                `**❯ Action:** ${restriction_name} restriction`,\r\n                `**❯ Member:** ${e.user.username}`,\r\n                `**❯ Moderator:** ${interaction.user.tag} `,\r\n                `**❯ Reason:** ${reason}`,\r\n            ].join(\"\\n\")\r\n        }]\r\n\r\n\r\n        )\r\n        .setTimestamp(new Date())\r\n        .setFooter({ text: `${restriction_name} restricted` });\r\n\r\n}\r\nexport function RoleEmbed(\r\n    interaction: discordJs.ChatInputCommandInteraction<\"cached\">,\r\n    c: discordJs.Role\r\n) {\r\n    return new discordJs.EmbedBuilder()\r\n        .setTimestamp()\r\n        .setColor(c.color)\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        .setThumbnail(interaction.guild.iconURL({ forceStatic: true })!)\r\n        .setDescription(`**Role information**`)\r\n        .addFields([{\r\n            name: \"Role\", value: [\r\n                `**❯ Name:** ${c.name}`,\r\n                `**❯ Role ID:** ${c.id}`,\r\n                `**❯ Color:** ${c.color}`,\r\n                `**❯ Hoisted:** ${c.hoist}`,\r\n                `**❯ Mentionable:** ${c.mentionable}`,\r\n            ].join(\"\\n\")\r\n        }]\r\n\r\n\r\n        );\r\n}\r\nexport function ChannelEmbed(\r\n    interaction: discordJs.CommandInteraction<\"cached\">,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    chanCreateTime: any,\r\n    channel: discordJs.TextChannel,\r\n) {\r\n    const ChanEmbeds = new discordJs.EmbedBuilder()\r\n        .setTitle(`${interaction.guild.name}'s Channel Info`)\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        .setThumbnail(interaction.guild.iconURL({ forceStatic: true })!)\r\n        .addFields([{\r\n            name: `❯ Name: `, value:\r\n                `${interaction.client.utils.toTitleCase(channel.name)}, (${channel.id})`,\r\n            inline: true\r\n        },\r\n        { name: `❯ Created At:`, value: `${chanCreateTime}`, inline: true }\r\n        ])\r\n    if (channel.isTextBased()) {\r\n        ChanEmbeds.addFields([{\r\n            name: \"Information\", value: [\r\n                `**❯ NSFW:** ${channel.nsfw ? channel.nsfw : \"False\"}`,\r\n                `**❯ Slowmode:** ${channel.rateLimitPerUser\r\n                    ? channel.rateLimitPerUser + \" Seconds\"\r\n                    : \"None\"\r\n                }`,\r\n                `**❯ Private Channel:** ${channel.permissionsFor(interaction.guild.id)?.has(discordJs.PermissionsBitField.Flags.ViewChannel)\r\n                    ? \"False\"\r\n                    : \"True\"\r\n                }`,\r\n            ].join(\"\\n\")\r\n        },\r\n        { name: `❯ Topic:`, value: ` ${channel.topic ? channel.topic : \"no topic\"}`, inline: true }])\r\n    }\r\n\r\n    ChanEmbeds.addFields([{\r\n        name: `❯ Type:`, value: ` ${ChannelType\r\n            ? ChannelType[channel.type]\r\n            : \"Cannot provide this information.\"}`, inline: true\r\n    }]);\r\n    return ChanEmbeds;\r\n}"]}