{"version":3,"file":"ban.js","sourceRoot":"./src/","sources":["src/commands/administrator/ban.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\nimport { prisma } from \"../../index.js\";\r\nimport * as Embed from \"../../structures/messageEmbeds.js\";\r\n\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"ban\")\r\n    .setDescription(\"Ban a member.\")\r\n    .addUserOption((option) =>\r\n        option.setName(\"target\").setDescription(\"Select a user\").setRequired(true)\r\n    )\r\n    .addStringOption((option) =>\r\n        option.setName(\"reason\").setDescription(\"reason to ban\").setRequired(true)\r\n    )\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.BanMembers)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (!interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.BanMembers)) {\r\n        return void interaction.reply({\r\n            content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"BAN_MEMBERS\"],\r\n            ephemeral: true,\r\n        });\r\n    }\r\n    const c = await prisma.guild.findFirst({ where: { guildID: interaction.guild.id } });\r\n    const member = interaction.options.getMember(\"target\");\r\n    const reason = interaction.options.getString(\"reason\");\r\n    if (!member?.moderatable || !member?.manageable) {\r\n        await interaction.reply({\r\n            content: SYSTEM.ERROR.ADMIN.MODERATION_DENIED,\r\n            ephemeral: true,\r\n        });\r\n    }\r\n    member?.send(\r\n        `Hello, you have been banned from ${interaction.guild.name} for: ${reason}`\r\n    )\r\n        .then(() => interaction.guild.members.ban(member!))\r\n        .catch((a) => console.log(a)),\r\n        interaction.reply({\r\n            content: `**${member?.user.tag}** has been banned`,\r\n            ephemeral: true,\r\n        });\r\n    const g = c?.logChannelID;\r\n    if (!g || g === null) { return }\r\n    const LogChannel = interaction.client.channels.cache.get(g);\r\n    if (!LogChannel || LogChannel === null) { return }\r\n    if (LogChannel?.isTextBased()) {\r\n        LogChannel?.send({ embeds: [Embed.AdminEmbed(interaction, member!, reason!)] });\r\n    }\r\n};\r\n\r\n\r\n"]}