{"version":3,"file":"lock.js","sourceRoot":"./src/","sources":["src/commands/administrator/lock.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtE,OAAO,MAAM,MAAM,qCAAqC,CAAC;AAGzD,MAAM,CAAC,MAAM,MAAM,GAA2B,IAAI,mBAAmB,EAAE;KAClE,OAAO,CAAC,MAAM,CAAC;KACf,cAAc,CAAC,gBAAgB,CAAC;KAChC,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM;KACD,OAAO,CAAC,QAAQ,CAAC;KACjB,cAAc,CAAC,kBAAkB,CAAC;KAClC,WAAW,CAAC,IAAI,CAAC,CACzB;KACA,2BAA2B,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;AAG1E,MAAM,CAAC,MAAM,GAAG,GAAwB,KAAK,EAAE,WAAkD,EAAiB,EAAE;IAChH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;QAC1F,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KACrH;IACD,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC9C,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAE5D,IAAI,UAAU,KAAK,IAAI,EAAE;QACrB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAA;QACvC,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAC;KACtG;SAAM;QACH,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;KACvC;IACD,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;AACrE,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\n\r\n\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"lock\")\r\n    .setDescription(\"Lock a channel\")\r\n    .addBooleanOption((option) =>\r\n        option\r\n            .setName(\"choice\")\r\n            .setDescription(\"Select a boolean\")\r\n            .setRequired(true)\r\n    )\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.ManageChannels)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (!interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.ManageChannels)) {\r\n        return void interaction.reply({ content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"MANAGE_CHANNELS\"], ephemeral: true });\r\n    }\r\n    const role = interaction.guild.roles.everyone;\r\n    const lockChoice = interaction.options.getBoolean(\"choice\");\r\n\r\n    if (lockChoice === true) {\r\n        role.permissions.remove(\"SendMessages\")\r\n        return void interaction.reply(\"This channel has been successfully locked for moderation purposes\");\r\n    } else {\r\n        role.permissions.add(\"SendMessages\")\r\n    }\r\n    return void interaction.reply(\"This channel has been unlocked!\");\r\n};"]}