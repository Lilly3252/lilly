{"version":3,"file":"slowmode.js","sourceRoot":"./src/","sources":["src/commands/administrator/slowmode.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtE,OAAO,MAAM,MAAM,qCAAqC,CAAC;AACzD,MAAM,CAAC,MAAM,MAAM,GAA2B,IAAI,mBAAmB,EAAE;KAClE,OAAO,CAAC,UAAU,CAAC;KACnB,cAAc,CAAC,qBAAqB,CAAC;KACrC,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC;KACnD,WAAW,CAAC,IAAI,CAAC,CAAC;KAC1B,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CACxB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAC9E;KACA,2BAA2B,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;AAG1E,MAAM,CAAC,MAAM,GAAG,GAAwB,KAAK,EAAE,WAAkD,EAAiB,EAAE;IAChH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;QAC1F,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KACrH;IACD,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAE,CAAC;IAC3D,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAE,CAAC;IACtD,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;QAAE,WAAW,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAA;KAAE;SAC1D;QACD,IAAI,OAAO,CAAC,WAAW,EAAE,EAAE;YACvB,MAAM,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC9C,WAAW,CAAC,KAAK,CAAC,wBAAwB,IAAI,UAAU,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;YACnF,CAAC,CAAC;iBACG,KAAK,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;KACJ;AACL,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"slowmode\")\r\n    .setDescription(\"slowmode a channel.\")\r\n    .addChannelOption((option) =>\r\n        option.setName(\"channel\").setDescription(\"channel name\")\r\n            .setRequired(true))\r\n    .addNumberOption((option) =>\r\n        option.setName(\"number\").setDescription(\"Enter a number\").setRequired(true)\r\n    )\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.ManageChannels)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (!interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.ManageChannels)) {\r\n        return void interaction.reply({ content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"MANAGE_CHANNELS\"], ephemeral: true });\r\n    }\r\n    const channel = interaction.options.getChannel(\"channel\")!;\r\n    const time = interaction.options.getNumber(\"number\")!;\r\n    if (isNaN(time)) { interaction.reply(\"That is not a number!\") }\r\n    else {\r\n        if (channel.isTextBased()) {\r\n            await channel.setRateLimitPerUser(time).then(() => {\r\n                interaction.reply(`Set the slow mode to ${time} seconds`), { ephemeral: true };\r\n            })\r\n                .catch((a: any) => console.log(a));\r\n        }\r\n    }\r\n};"]}