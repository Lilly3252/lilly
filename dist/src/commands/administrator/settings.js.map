{"version":3,"file":"settings.js","sourceRoot":"./src/","sources":["src/commands/administrator/settings.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,sDAAsD;AACtD,OAAO,EAA+B,mBAAmB,EAAE,MAAM,YAAY,CAAC;AAE9E,OAAO,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAE3D,MAAM,CAAC,MAAM,MAAM,GAA2B,IAAI,mBAAmB,EAAE;KAClE,OAAO,CAAC,UAAU,CAAC;KACnB,cAAc,CAAC,sBAAsB,CAAC;KACtC,2BAA2B,CAAC,mBAAmB,CAAC,KAAK,CAAC,aAAa,CAAC;KACpE,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,cAAc,CAAC;KACvB,cAAc,CAAC,wBAAwB,CAAC,CAChD;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,WAAW,CAAC;KACpB,cAAc,CAAC,yBAAyB,CAAC;KACzC,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAC9D,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,gBAAgB,CAAC;KACzB,cAAc,CAAC,yBAAyB,CAAC;KACzC,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM;KACD,OAAO,CAAC,SAAS,CAAC;KAClB,cAAc,CAAC,mBAAmB,CAAC;KACnC,WAAW,CAAC,IAAI,CAAC,CACzB,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,QAAQ,CAAC;KACjB,cAAc,CAAC,yBAAyB,CAAC;KACzC,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM;KACD,OAAO,CAAC,SAAS,CAAC;KAClB,cAAc,CAAC,mBAAmB,CAAC;KACnC,WAAW,CAAC,IAAI,CAAC,CACzB,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,SAAS,CAAC;KAClB,cAAc,CAAC,0BAA0B,CAAC;KAC1C,aAAa,CAAC,CAAC,MAAM,EAAE,EAAE,CACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,CACxD,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,eAAe,CAAC;KACxB,cAAc,CAAC,wCAAwC,CAAC;KACxD,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAC9D,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,mBAAmB,CAAC;KAC5B,cAAc,CAAC,2CAA2C,CAAC;KAC3D,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAC9D,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,gBAAgB,CAAC;KACzB,cAAc,CAAC,wCAAwC,CAAC;KACxD,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CACzB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAC9D,CACR;KACA,aAAa,CAAC,CAAC,UAAU,EAAE,EAAE,CAC1B,UAAU;KACL,OAAO,CAAC,gBAAgB,CAAC;KACzB,cAAc,CAAC,uCAAuC,CAAC;KACvD,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE,CACxB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAC9D,CACR,CAAA;AAEL,MAAM,CAAC,MAAM,GAAG,GAAwB,KAAK,EAAE,WAAkD,EAAiB,EAAE;IAChH,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;SACtF,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAClB,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;gBACtB,IAAI,EAAE;oBACF,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE;oBAC7B,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,IAAI;oBAC5B,aAAa,EAAE,IAAI;oBACnB,YAAY,EAAE,IAAI;oBAClB,gBAAgB,EAAE,IAAI;oBACtB,0BAA0B,EAAE,IAAI;oBAChC,YAAY,EAAE,KAAK;oBACnB,iBAAiB,EAAE,KAAK;oBACxB,qBAAqB,EAAE,KAAK;oBAC5B,iBAAiB,EAAE,KAAK;iBAC3B;aACJ,CAAC,CAAA;SACL;QACD,OAAO,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;IAC/E,CAAC,CAAC,CAAA;IACN,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,cAAc,EAAE;QACxD,WAAW,CAAC,KAAK,CAAC;YACd,MAAM,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,QAAS,CAAC,CAAC;YACpD,SAAS,EAAE,IAAI;SAClB,CAAC,CAAC;KACN;IACD,mBAAmB;IACnB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,WAAW,EAAE;QACrD,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC;gBACjG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,8BAA8B;oBACvC,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;aAAM;YACH,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,CAAC;gBAClG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,+BAA+B;oBACxC,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;KACJ;IACD,sBAAsB;IACtB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,gBAAgB,EAAE;QAC1D,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,CAAC;gBACtG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,uCAAuC;oBAChD,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;aAAM;YACH,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,CAAC;gBACvG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,wCAAwC;oBACjD,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;KACJ;IACD,qBAAqB;IACrB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,eAAe,EAAE;QACzD,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,CAAC;gBACtG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,uCAAuC;oBAChD,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;aAAM;YACH,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAE,CAAC;gBACvG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,wCAAwC;oBACjD,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;KACJ;IACD,yBAAyB;IACzB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,mBAAmB,EAAE;QAC7D,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,qBAAqB,EAAE,IAAI,EAAE,EAAE,CAAC;gBAC1G,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,2CAA2C;oBACpD,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;aAAM;YACH,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,qBAAqB,EAAE,KAAK,EAAE,EAAE,CAAC;gBAC3G,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,4CAA4C;oBACrD,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;KACJ;IACD,sBAAsB;IACtB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,gBAAgB,EAAE;QAC1D,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAE,CAAC;QACrD,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;YACnG,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,EAAE,qCAAqC,CAAC,EAAE;gBACjD,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;aACI;YACD,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;YACzG,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,EAAE,oCAAoC;gBAC7C,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;KACJ;IACD,wBAAwB;IACxB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,QAAQ,EAAE;QAClD,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAE,CAAC;QACrD,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACjB,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAC5G,WAAW,CAAC,KAAK,CAAC;gBACd,OAAO,EAAE,oCAAoC,CAAC,EAAE;gBAChD,SAAS,EAAE,IAAI;aAClB,CAAC,CAAC,CAAA;SACV;aACI;YACD,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;YACrG,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,EAAE,mCAAmC;gBAC5C,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;KACJ;IACD,kBAAkB;IAClB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,SAAS,EAAE;QACnD,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC;QAC/C,IAAI,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,CAAC,aAAa,CAAC,EAAE;YACtD,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;gBAClG,WAAW,CAAC,KAAK,CAAC;oBACd,OAAO,EAAE,6BAA6B,CAAC,CAAC,IAAI,EAAE;oBAC9C,SAAS,EAAE,IAAI;iBAClB,CAAC,CAAA;SACT;aACI;YACD,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;YACtG,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,EAAE,4BAA4B;gBACrC,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;KACJ;IACD,uBAAuB;IACvB,wBAAwB;IACxB,IAAI,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,gBAAgB,EAAE;QAC1D,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,EAAE;YACH,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,0BAA0B,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;YAChH,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,EAAE,qCAAqC,CAAC,EAAE;gBACjD,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;aAAM,IAAI,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,0BAA0B,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;YACnH,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC;gBAC1B,OAAO,EAAE,oCAAoC;gBAC7C,SAAS,EAAE,IAAI;aAClB,CAAC,CAAA;SACL;KAEJ;AACL,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { ChatInputCommandInteraction, PermissionFlagsBits } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport { prisma } from \"../../index.js\";\r\nimport * as Embed from \"../../structures/messageEmbeds.js\";\r\n\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"settings\")\r\n    .setDescription(\"show or add settings\")\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.Administrator)\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"showsettings\")\r\n            .setDescription(\"Show settings you have\")\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"anti-raid\")\r\n            .setDescription(\"set anti-raid ON or OFF\")\r\n            .addBooleanOption((option) =>\r\n                option.setName(\"choice\").setDescription(\"Select a boolean\")\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"welcomechannel\")\r\n            .setDescription(\"set the welcome channel\")\r\n            .addChannelOption((option) =>\r\n                option\r\n                    .setName(\"channel\")\r\n                    .setDescription(\"Select a channel.\")\r\n                    .setRequired(true)\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"modlog\")\r\n            .setDescription(\"set the Mod Log channel\")\r\n            .addChannelOption((option) =>\r\n                option\r\n                    .setName(\"channel\")\r\n                    .setDescription(\"Select a channel.\")\r\n                    .setRequired(true)\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"modrole\")\r\n            .setDescription(\"set the Mod Role channel\")\r\n            .addRoleOption((option) =>\r\n                option.setName(\"role\").setDescription(\"Enter a Role\")\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"messagedelete\")\r\n            .setDescription(\"set the DeleteMessages event ON or OFF\")\r\n            .addBooleanOption((option) =>\r\n                option.setName(\"choice\").setDescription(\"Select a boolean\")\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"messagedeletebulk\")\r\n            .setDescription(\"set the messageDeleteBulk event ON or OFF\")\r\n            .addBooleanOption((option) =>\r\n                option.setName(\"choice\").setDescription(\"Select a boolean\")\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"messageupdates\")\r\n            .setDescription(\"set the MessageUpdates event ON or OFF\")\r\n            .addBooleanOption((option) =>\r\n                option.setName(\"choice\").setDescription(\"Select a boolean\")\r\n            )\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n        subcommand\r\n            .setName(\"welcomemessage\")\r\n            .setDescription(\"set the WelcomeMessage for your guild\")\r\n            .addStringOption((option) =>\r\n                option.setName(\"message\").setDescription(\"Enter a message\")\r\n            )\r\n    )\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    const guild_db = await prisma.guild.findFirst({ where: { guildID: interaction.guild.id } })\r\n        .then(async (guild) => {\r\n            if (!guild) {\r\n                await prisma.guild.create({\r\n                    data: {\r\n                        guildID: interaction.guild.id,\r\n                        name: interaction.guild.name,\r\n                        moderatorRole: null,\r\n                        logChannelID: null,\r\n                        welcomeChannelID: null,\r\n                        personalizedWelcomeMessage: null,\r\n                        antiRaidMode: false,\r\n                        messageDeleteMode: false,\r\n                        messageBulkDeleteMode: false,\r\n                        messageUpdateMode: false\r\n                    }\r\n                })\r\n            }\r\n            return prisma.guild.findFirst({ where: { guildID: interaction.guild.id } })\r\n        })\r\n    if (interaction.options.getSubcommand() === \"showsettings\") {\r\n        interaction.reply({\r\n            embeds: [Embed.SettingEmbed(interaction, guild_db!)],\r\n            ephemeral: true,\r\n        });\r\n    }\r\n    //**SUB COMMANDS */\r\n    if (interaction.options.getSubcommand() === \"anti-raid\") {\r\n        const choices = interaction.options.getBoolean(\"choice\");\r\n        if (choices === true) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { antiRaidMode: true } }),\r\n                interaction.reply({\r\n                    content: \"\\u2705 AntiRaid Mode enable.\",\r\n                    ephemeral: true,\r\n                })\r\n        } else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { antiRaidMode: false } }),\r\n                interaction.reply({\r\n                    content: \"\\u274C AntiRaid Mode disable.\",\r\n                    ephemeral: true,\r\n                })\r\n        }\r\n    }\r\n    // MessageUpdate event\r\n    if (interaction.options.getSubcommand() === \"messageupdates\") {\r\n        const choices = interaction.options.getBoolean(\"choice\");\r\n        if (choices === true) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { messageUpdateMode: true } }),\r\n                interaction.reply({\r\n                    content: \"\\u2705 MessageUpdate has been enable.\",\r\n                    ephemeral: true,\r\n                })\r\n        } else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { messageUpdateMode: false } }),\r\n                interaction.reply({\r\n                    content: \"\\u274C MessageUpdate has been disable.\",\r\n                    ephemeral: true,\r\n                })\r\n        }\r\n    }\r\n    //MessageDelete Event\r\n    if (interaction.options.getSubcommand() === \"messagedelete\") {\r\n        const choices = interaction.options.getBoolean(\"choice\");\r\n        if (choices === true) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { messageDeleteMode: true } }),\r\n                interaction.reply({\r\n                    content: \"\\u2705 MessageDelete has been enable.\",\r\n                    ephemeral: true,\r\n                })\r\n        } else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { messageDeleteMode: false } }),\r\n                interaction.reply({\r\n                    content: \"\\u274C MessageDelete has been disable.\",\r\n                    ephemeral: true,\r\n                })\r\n        }\r\n    }\r\n    //MessageDeleteBulk Event\r\n    if (interaction.options.getSubcommand() === \"messagedeletebulk\") {\r\n        const choices = interaction.options.getBoolean(\"choice\");\r\n        if (choices === true) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { messageBulkDeleteMode: true } }),\r\n                interaction.reply({\r\n                    content: \"\\u2705 messageDeleteBulk has been enable.\",\r\n                    ephemeral: true,\r\n                })\r\n        } else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { messageBulkDeleteMode: false } }),\r\n                interaction.reply({\r\n                    content: \"\\u274C MessageDeleteBulk has been disable.\",\r\n                    ephemeral: true,\r\n                })\r\n        }\r\n    }\r\n    //WelcomeChannel Setup\r\n    if (interaction.options.getSubcommand() === \"welcomechannel\") {\r\n        const e = interaction.options.getChannel(\"channel\")!;\r\n        if (e.isTextBased()) {\r\n            prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { welcomeChannelID: e.id } })\r\n            return void interaction.reply({\r\n                content: `✅ Welcome Channel has been set to ${e}`,\r\n                ephemeral: true,\r\n            })\r\n        }\r\n        else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { welcomeChannelID: null } })\r\n            return void interaction.reply({\r\n                content: `✅ Welcome Channel has been removed`,\r\n                ephemeral: true,\r\n            })\r\n        }\r\n    }\r\n    //ModLog channelID setup\r\n    if (interaction.options.getSubcommand() === \"modlog\") {\r\n        const f = interaction.options.getChannel(\"channel\")!;\r\n        if (f.isTextBased()) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { logChannelID: f.id } }).then(() =>\r\n                interaction.reply({\r\n                    content: `✅ ModLog Channel has been set to ${f}`,\r\n                    ephemeral: true,\r\n                }))\r\n        }\r\n        else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { logChannelID: null } })\r\n            return void interaction.reply({\r\n                content: `✅ ModLog Channel has been removed`,\r\n                ephemeral: true,\r\n            })\r\n        }\r\n    }\r\n    //ModRole ID Setup\r\n    if (interaction.options.getSubcommand() === \"modrole\") {\r\n        const h = interaction.options.getRole(\"role\")!;\r\n        if (h.permissions.has(PermissionFlagsBits.Administrator)) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { moderatorRole: h.id } }),\r\n                interaction.reply({\r\n                    content: `✅ ModRole has been set to ${h.name}`,\r\n                    ephemeral: true,\r\n                })\r\n        }\r\n        else {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { moderatorRole: null } })\r\n            return void interaction.reply({\r\n                content: `✅ ModRole has been removed`,\r\n                ephemeral: true,\r\n            })\r\n        }\r\n    }\r\n    // WelcomeMessage Setup\r\n    //**Need to be tested */\r\n    if (interaction.options.getSubcommand() === \"welcomemessage\") {\r\n        const i = interaction.options.getString(\"input\");\r\n        if (i) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { personalizedWelcomeMessage: i } })\r\n            return void interaction.reply({\r\n                content: `✅ Welcome Message has been set to ${i}`,\r\n                ephemeral: true,\r\n            })\r\n        } else if (i === null) {\r\n            await prisma.guild.update({ where: { guildID: interaction.guild.id }, data: { personalizedWelcomeMessage: null } })\r\n            return void interaction.reply({\r\n                content: `✅ Welcome Message has been deleted`,\r\n                ephemeral: true,\r\n            })\r\n        }\r\n\r\n    }\r\n};"]}