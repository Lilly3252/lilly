{"version":3,"file":"refresh.js","sourceRoot":"./src/","sources":["src/refresh.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,uDAAuD;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAChC,MAAM,EAAE,CAAC;AACT,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,OAAO,MAAM,SAAS,CAAC;AAG9B,MAAM,QAAQ,GAAc,EAAE,CAAC;AAC/B,MAAM,OAAO,GAAG,CAAC,eAAe,EAAE,KAAK,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;AAErE,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAC7B,MAAM,YAAY,GAAG,EAAE;SAClB,WAAW,CAAC,gBAAgB,MAAM,GAAG,CAAC;SACtC,MAAM,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAEpD,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;QAC7B,MAAM,OAAO,GAAkB,MAAM,MAAM,CAAC,cAAc,MAAM,IAAI,IAAI,EAAE,CAAC,CAAC;QAC5E,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;KAChD;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAU,CAAC;AACxC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,CAC7C,OAAO,CAAC,GAAG,CAAC,KAAM,CACrB,CAAC;AAEF,CAAC,KAAK,IAAI,EAAE;IACR,IAAI;QACA,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAE5D,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAS,CAAC,EAAE;YAClD,IAAI,EAAE,QAAQ;SACjB,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CACP,mDAAmD,QAAQ,CAAC,MAAM,8BAA8B,CACnG,CAAC;KACL;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACxB;AACL,CAAC,CAAC,EAAE,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/no-var-requires */\r\nimport { config } from 'dotenv';\r\nconfig();\r\nimport { REST } from \"@discordjs/rest\";\r\nimport { Routes } from \"discord-api-types/v10\";\r\nimport fs from \"fs\";\r\nimport process from 'process';\r\nimport type  { SlashCommand } from './structures/index.js';\r\n\r\nconst commands: unknown[] = [];\r\nconst modules = [\"administrator\", \"fun\", \"information\", \"utilities\"];\r\n\r\nmodules.forEach(async (folder) => {\r\n    const commandFiles = fs\r\n        .readdirSync(`src/commands/${folder}/`)\r\n        .filter((file: string) => file.endsWith(\".js\"));\r\n\r\n    for (const file of commandFiles) {\r\n        const command : SlashCommand = await import(`./commands/${folder}/${file}`);\r\n        await commands.push(command.slashy.toJSON());\r\n    }\r\n});\r\n\r\nconst clientId = process.env.CLIENT_ID!;\r\nconst rest = new REST({ version: \"10\" }).setToken(\r\n    process.env.TOKEN!\r\n);\r\n\r\n(async () => {\r\n    try {\r\n        console.log(\"Started refreshing application (/) commands.\");\r\n\r\n        await rest.put(Routes.applicationCommands(clientId!), {\r\n            body: commands,\r\n        });\r\n\r\n        console.log(\r\n            `Successfully reloaded application (/) commands. ${commands.length} commands has been refreshed`\r\n        );\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n})();\r\n"]}