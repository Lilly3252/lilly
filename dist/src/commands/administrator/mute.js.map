{"version":3,"file":"mute.js","sourceRoot":"./src/","sources":["src/commands/administrator/mute.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type { ChatInputCommandInteraction } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport SYSTEM from \"../../structures/messageSystem.json\";\r\nimport { prisma } from \"../../index.js\";\r\n\r\nimport * as Embed from \"../../structures/messageEmbeds.js\";\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n    .setName(\"mute\")\r\n    .setDescription(\"mute a member.\")\r\n    .addUserOption((option) =>\r\n        option.setName(\"target\").setDescription(\"Select a user\").setRequired(true)\r\n    )\r\n    .addStringOption((option) =>\r\n        option\r\n            .setName(\"reason\")\r\n            .setDescription(\"reason to mute\")\r\n            .setRequired(true)\r\n    )\r\n    .setDefaultMemberPermissions(PermissionsBitField.Flags.MuteMembers)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (!interaction.guild.members.me?.permissions.has(PermissionsBitField.Flags.MuteMembers)) {\r\n        return void interaction.reply({\r\n            content: SYSTEM.ERROR.PERMISSIONS.BOT_PERM[\"MUTE_MEMBERS\"],\r\n            ephemeral: true,\r\n        });\r\n    }\r\n\r\n    const member = interaction.options.getMember(\"target\");\r\n    const reason = interaction.options.getString(\"reason\");\r\n    const database = await prisma.guild.findFirst({ where: { guildID: interaction.guild.id } });\r\n    if (!member?.moderatable || !member.manageable) {\r\n        await interaction.reply({\r\n            content: SYSTEM.ERROR.ADMIN.MODERATION_DENIED,\r\n            ephemeral: true,\r\n        });\r\n    }\r\n    let role = interaction.guild.roles.cache.find(\r\n        (role) => role.name === \"Muted\"\r\n    );\r\n    if (!role)\r\n        try {\r\n            (role = await interaction.guild.roles.create({\r\n                name: \"Muted\",\r\n                color: \"#514f48\",\r\n                permissions: [],\r\n            })),\r\n                role.permissions.remove(\"SendMessages\", \"AddReactions\", \"SendTTSMessages\", \"AttachFiles\", \"Speak\")\r\n        } catch (err: any) {\r\n            console.log(err.stack);\r\n        }\r\n    member?.roles.add(role!.id).then(() => {\r\n        member\r\n            .send(\r\n                `Hello, you have been muted in ${interaction.guild.name} for: ${reason}`\r\n            )\r\n            .catch((err) => console.log(err)),\r\n            interaction.reply({\r\n                content: `${member.user.username} was successfully muted.`,\r\n                ephemeral: true,\r\n            });\r\n    });\r\n\r\n    const data = database?.logChannelID;\r\n    if (!data || data === null) { return }\r\n    const LogChannel = interaction.client.channels.cache.get(data);\r\n    if (!LogChannel || LogChannel === null) { return }\r\n    if (LogChannel?.isTextBased()) {\r\n        LogChannel?.send({ embeds: [Embed.AdminEmbed(interaction, member!, reason!)] });\r\n    }\r\n}"]}