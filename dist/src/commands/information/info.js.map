{"version":3,"file":"info.js","sourceRoot":"./src/","sources":["src/commands/information/info.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-asserted-optional-chain */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { ChatInputCommandInteraction, TextChannel, time } from \"discord.js\";\r\nimport type { SlashCommand } from \"../../structures/index.js\";\r\nimport { PermissionsBitField, SlashCommandBuilder } from \"discord.js\";\r\nimport * as Embed from \"../../structures/messageEmbeds.js\";\r\nimport os from \"os\";\r\n\r\nexport const slashy: SlashCommand[\"slashy\"] = new SlashCommandBuilder()\r\n.setName(\"info\")\r\n.setDescription(\"Information.\")\r\n.setDefaultMemberPermissions(PermissionsBitField.Flags.ManageRoles)\r\n.addSubcommand((subcommand) =>\r\n  subcommand\r\n    .setName(\"channel\")\r\n    .setDescription(\"Select a channel.\")\r\n    .addChannelOption((option) =>\r\n      option\r\n        .setName(\"channel\")\r\n        .setDescription(\"Select a channel.\")\r\n        .setRequired(true)\r\n    )\r\n)\r\n.addSubcommand((subcommand) =>\r\n  subcommand\r\n    .setName(\"role\")\r\n    .setDescription(\"Select a role.\")\r\n    .addRoleOption((option) =>\r\n      option\r\n        .setName(\"role\")\r\n        .setDescription(\"Select a role.\")\r\n        .setRequired(true)\r\n    )\r\n)\r\n.addSubcommand((subcommand) =>\r\n  subcommand.setName(\"bot\").setDescription(\"Get information of the bot.\")\r\n)\r\n.addSubcommand((subcommand) =>\r\n  subcommand\r\n    .setName(\"user\")\r\n    .setDescription(\"Get information of a user.\")\r\n    .addUserOption((option) =>\r\n      option\r\n        .setName(\"target\")\r\n        .setDescription(\"Select a user\")\r\n        .setRequired(true)\r\n    )\r\n)\r\n.addSubcommand((subcommand) =>\r\n  subcommand\r\n    .setName(\"server\")\r\n    .setDescription(\"Get information of the server.\")\r\n)\r\n\r\n\r\nexport const run: SlashCommand[\"run\"] = async (interaction: ChatInputCommandInteraction<\"cached\">): Promise<void> => {\r\n    if (interaction.options.getSubcommand() === \"channel\") {\r\n    const channel = interaction.options.getChannel(\"channel\") as TextChannel;\r\n    \r\n    const chanCreateTime = time(channel?.createdAt!, \"R\");\r\n\r\n    await interaction.reply({\r\n      embeds: [\r\n        Embed.ChannelEmbed(\r\n          interaction,\r\n          chanCreateTime,\r\n          channel,\r\n        ),\r\n      ],\r\n    });\r\n  }\r\n  if (interaction.options.getSubcommand() === \"role\") {\r\n    const c = interaction.options.getRole(\"role\");\r\n\r\n    interaction.reply({ embeds: [Embed.RoleEmbed(interaction, c!)] });\r\n  }\r\n  if (interaction.options.getSubcommand() === \"server\") {\r\n    const server_create = time(interaction.guild.createdAt, \"R\");\r\n    const owner = await interaction.guild.fetchOwner();\r\n    const b = interaction.guild.roles.cache\r\n      .sort((c, a) => a.position - c.position)\r\n      .map((a) => a.toString());\r\n    const member = interaction.guild.members;\r\n    const d = interaction.guild.channels;\r\n    const e = interaction.guild.emojis;\r\n\r\n    interaction.reply({\r\n      embeds: [\r\n        Embed.ServerInfoEmbed(\r\n          interaction,\r\n          owner,\r\n          member,\r\n          b,\r\n          d,\r\n          e,\r\n          server_create\r\n        ),\r\n      ],\r\n    });\r\n  }\r\n  if (interaction.options.getSubcommand() === \"bot\") {\r\n    const b = os.cpus()[0];\r\n    const bot_create = time(interaction.client.user?.createdAt!, \"R\");\r\n    await interaction.reply({\r\n      embeds: [Embed.BotInfoEmbed(interaction, b!, bot_create)!],\r\n    });\r\n  }\r\n  if (interaction.options.getSubcommand() === \"user\") {\r\n    const member = interaction.options.getMember(\"target\");\r\n    const flags = {\r\n      BotHTTPInteractions : \"HTTP Interaction Only\",\r\n      Staff: \"Discord Employee\",\r\n      Partner: \"Discord Partner\",\r\n      BugHunterLevel1: \"Bug Hunter (Level 1)\",\r\n      BugHunterLevel2: \"Bug Hunter (Level 2)\",\r\n      HypeSquadOnlineHouse1: \"House of Bravery\",\r\n      HypeSquadOnlineHouse2: \"House of Brilliance\",\r\n      HypeSquadOnlineHouse3: \"House of Balance\",\r\n      Hypesquad: \"Hypesquad\",\r\n      Quarantined : \"Quarantined Account\",\r\n      Spammer: \"Spammer User\" , \r\n      PremiumEarlySupporter: \"Early Nitro Supporter\",\r\n      TeamPseudoUser: \"Team User\",\r\n      VerifiedBot: \"Verified Bot\",\r\n      VerifiedDeveloper: \"Early Verified Bot Developer\",\r\n      CertifiedModerator: \"Discord Certified Moderator\",\r\n    };\r\n    const created = time(member?.user.createdAt!, \"R\");\r\n    const flag = member?.user.flags?.toArray()\r\n    console.log(flag)\r\n    const role = member?.roles.cache.sort((c, a) => a.position - c.position).map((a) => a.toString()).slice(0, -1);\r\n    return void interaction.reply({\r\n      embeds: [\r\n        Embed.UserInfoEmbed(interaction, member!, role, flag!, flags, created),\r\n      ],\r\n    });\r\n  }\r\n}\r\n"]}